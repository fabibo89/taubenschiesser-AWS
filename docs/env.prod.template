# ==============================================
# Taubenschiesser - Produktions-Konfiguration
# für lokalen Server mit Host-MongoDB
# ==============================================
#
# WICHTIG: Kopiere diese Datei nach .env.prod und passe die Werte an:
# cp docs/env.prod.template .env.prod
# nano .env.prod
#

# ======================
# MongoDB Konfiguration
# ======================
# WICHTIG: MongoDB muss auf dem Host-System laufen!
# Installation: siehe MONGODB_CONFIG.md
#
# Beispiele:
# - Standard (empfohlen):
#   mongodb://admin:PASSWORT@host.docker.internal:27017/taubenschiesser?authSource=admin
#
# - Andere Server-IP:
#   mongodb://admin:PASSWORT@192.168.1.100:27017/taubenschiesser?authSource=admin
#
# - Ohne Authentifizierung (NICHT für Produktion):
#   mongodb://host.docker.internal:27017/taubenschiesser

MONGODB_URI=mongodb://admin:AENDERE_MICH@host.docker.internal:27017/taubenschiesser?authSource=admin

# ======================
# Sicherheit
# ======================
# KRITISCH: Ändere diesen Wert für Produktion!
# Mindestens 32 Zeichen, zufällig generiert
# Generieren mit: openssl rand -base64 32

JWT_SECRET=AENDERE-MICH-MINDESTENS-32-ZEICHEN-LANGER-ZUFAELLIGER-SCHLUESSEL

# ======================
# URLs & Ports
# ======================
# WICHTIG: Für Zugriff von Handy/Notebook NICHT "localhost" verwenden!
#
# Option A: Hostname (einfacher zu merken, muss im Netzwerk auflösbar sein)
CLIENT_URL=http://DEIN_HOSTNAME:3000
REACT_APP_API_URL=http://DEIN_HOSTNAME:5001
# Beispiel: http://casahosch:3000

# Option B: IP-Adresse (zuverlässiger, funktioniert immer)
# Finde deine IP mit: hostname -I
# CLIENT_URL=http://192.168.1.100:3000
# REACT_APP_API_URL=http://192.168.1.100:5001

# Option C: Nur vom Server selbst (nicht für Handy/Notebook!)
# CLIENT_URL=http://localhost:3000
# REACT_APP_API_URL=http://localhost:5001

# ======================
# AWS IoT Core (Optional)
# ======================
# Nur benötigt, wenn AWS IoT Core statt lokalem MQTT verwendet wird
# Für lokales MQTT: Diese Zeilen auskommentiert lassen
#
# Setup: siehe AWS_IOT_SETUP.md
# AWS_IOT_ENDPOINT=xxxxx-ats.iot.eu-central-1.amazonaws.com
# AWS_REGION=eu-central-1
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=

# ======================
# Computer Vision Service
# ======================
# Service Auswahl: 'yolov8' (lokal) oder 'rekognition' (AWS)
CV_SERVICE=yolov8

# YOLOv8 Konfiguration (wenn CV_SERVICE=yolov8)
MODEL_PATH=/app/models/yolov8l.onnx
CLASSES_PATH=/app/models/yolov8l.json
YOLO_CONFIDENCE=0.25
YOLO_IOU=0.45

# AWS Rekognition (wenn CV_SERVICE=rekognition)
# AWS_REGION=eu-central-1
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=

# ======================
# Logging
# ======================
# Optional: Log-Level anpassen
# LOG_LEVEL=info

# ======================
# Hardware Monitor
# ======================
# Service Token für Hardware Monitor (falls geändert)
# SERVICE_TOKEN=hardware-monitor-service-token

